# docker-compose.yml

version: "3.9"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:

services:
  traefik:
    image: traefik:v2.11
    container_name: traefik
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks: [app-network]
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.localhost`)
      - traefik.http.routers.traefik.entrypoints=web
      - traefik.http.routers.traefik.service=api@internal

  db:
    image: postgres:15
    container_name: postgres_team
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: siperup44rQVr8
      POSTGRES_DB: team_platform_id
    command: ["postgres", "-c", "password_encryption=md5"]
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks: [app-network]

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks: [app-network]

  # --- PROD: backend ---
  idservice:
    profiles: ["prod"]
    build:
      context: ./id_service
    container_name: idservice_team
    command: sh -lc "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000"
    env_file:
      - ./id_service/.env
    environment:
      ISSUER: http://id.localhost/idp
      DATABASE_URL: postgresql+asyncpg://postgres:siperup44rQVr8@db:5432/team_platform_id
      REDIS_URL: redis://redis:6379/1
      CORS_ORIGINS: "[]"
      APP_ENV: development
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [app-network]
    labels:
      - traefik.enable=true
      - traefik.http.routers.idservice.rule=Host(`id.localhost`) && PathPrefix(`/idp`)
      - traefik.http.routers.idservice.entrypoints=web
      - traefik.http.routers.idservice.priority=20
      - traefik.http.middlewares.idservice-stripprefix.stripprefix.prefixes=/idp
      - traefik.http.routers.idservice.middlewares=idservice-stripprefix
      - traefik.http.services.idservice.loadbalancer.server.port=8000

  # --- PROD: frontend (статический билд) ---
  idfrontend:
    profiles: ["prod"]
    build:
      context: ./id_frontend
      args:
        VITE_API_BASE: /idp
        VITE_CLIENT_ID: id_frontend
    container_name: id_frontend
    networks: [app-network]
    labels:
      - traefik.enable=true
      - traefik.http.routers.idfrontend.rule=Host(`id.localhost`)
      - traefik.http.routers.idfrontend.entrypoints=web
      - traefik.http.routers.idfrontend.priority=10
      - traefik.http.services.idfrontend.loadbalancer.server.port=80

  # --- DEV: backend с авто-перезапуском ---
  idservice_dev:
    profiles: ["dev"]
    build:
      context: ./id_service
    command: sh -lc "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    env_file:
      - ./id_service/.env
    environment:
      ISSUER: http://id.localhost/idp
      DATABASE_URL: postgresql+asyncpg://postgres:siperup44rQVr8@postgres_team:5432/team_platform_id
      REDIS_URL: redis://redis:6379/1
      CORS_ORIGINS: "[]"
      APP_ENV: development
      WATCHFILES_FORCE_POLLING: "true"
    volumes:
      - ./id_service:/id_service
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks: [app-network]
    labels:
      - traefik.enable=true
      - traefik.http.routers.idservice.rule=Host(`id.localhost`) && PathPrefix(`/idp`)
      - traefik.http.routers.idservice.entrypoints=web
      - traefik.http.routers.idservice.priority=20
      - traefik.http.middlewares.idservice-stripprefix.stripprefix.prefixes=/idp
      - traefik.http.routers.idservice.middlewares=idservice-stripprefix
      - traefik.http.services.idservice.loadbalancer.server.port=8000

  # --- DEV: фронт на Vite с HMR ---
  idfrontend_dev:
    profiles: ["dev"]
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm ci && npm run dev -- --host 0.0.0.0"
    environment:
      VITE_API_BASE: /idp
      VITE_CLIENT_ID: id_frontend
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./id_frontend:/app
      - /app/node_modules
    networks: [app-network]
    labels:
      - traefik.enable=true
      - traefik.http.routers.idfrontend.rule=Host(`id.localhost`)
      - traefik.http.routers.idfrontend.entrypoints=web
      - traefik.http.routers.idfrontend.priority=10
      - traefik.http.services.idfrontend.loadbalancer.server.port=5173
