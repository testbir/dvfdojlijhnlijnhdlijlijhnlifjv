// üì¶ src/api/axiosInstance.ts

import axios from "axios";
import type { AxiosInstance } from "axios";

/**
 * –°–æ–∑–¥–∞—ë—Ç axios-–∏–Ω—Å—Ç–∞–Ω—Å —Å –±–∞–∑–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞.
 * @param baseURL –ë–∞–∑–æ–≤—ã–π URL (–Ω–∞–ø—Ä–∏–º–µ—Ä, /auth-api, /catalog-api)
 */
export const createApi = (baseURL: string): AxiosInstance => {
  const instance = axios.create({
    baseURL,
    withCredentials: true,
    timeout: 10000,
  });

  // üîê 1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
  instance.interceptors.request.use(config => {
    const raw = localStorage.getItem("auth_tokens");
    const tokens = raw ? JSON.parse(raw) : null;

    if (tokens?.access) {
      config.headers.Authorization = `Bearer ${tokens.access}`;
    }

    return config;
  });

  // üö® 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ 401
  instance.interceptors.response.use(
    response => response,
    error => {
      if (error.response?.status === 401) {
        console.warn("‚ö†Ô∏è –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–∑–º–æ–∂–µ–Ω —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /login.");
        // window.location.href = "/login"; // –í–∫–ª—é—á–∏—Ç—å –ø–æ –∂–µ–ª–∞–Ω–∏—é
      }
      return Promise.reject(error);
    }
  );

  return instance;
};
